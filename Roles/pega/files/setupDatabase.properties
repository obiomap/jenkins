# Properties File for use with PRPC Utilities.  Update this file
# before using setupDatabase.bat/sh script.
# Set the DB connection

################### COMMON PROPERTIES - DB CONNECTION (REQUIRED) ##################
###################################################################################
#       For databases that use multiple JDBC driver files (such as DB2), you may specify
#       semicolon separated values for 'pega.jdbc.driver.jar'
#
#       pega.jdbc.driver.jar    -- path to jdbc jar
#
#       pega.jdbc.driver.class  -- jdbc class.  Valid values are:
#
#       Oracle              oracle.jdbc.OracleDriver
#       IBM DB/2            com.ibm.db2.jcc.DB2Driver
#       SQL Server          com.microsoft.sqlserver.jdbc.SQLServerDriver
#       PostgreSQL          org.postgresql.Driver
#
#       pega.database.type      Valid values are: mssql, oracledate, udb, db2zos, postgres
#
#       pega.jdbc.url           Valid values are:
#
#       Oracle              jdbc:oracle:thin:@//localhost:1521/dbName
#       IBM DB/2 z / OS         jdbc:db2://localhost:50000/dbName
#       IBM DB/2            jdbc:db2://localhost:50000/dbName:fullyMaterializeLobData=true;fullyMaterializeInputStreams=true;progressiveStreaming=2;useJDBC4ColumnNameAndLabelSemantics=2;
#       SQL Server          jdbc:sqlserver://localhost:1433;databaseName=dbName;selectMethod=cursor;sendStringParametersAsUnicode=false
#       PostgreSQL          jdbc:postgresql://localhost:5432/dbName
#
#       pega.jdbc.username      db username
#       pega.jdbc.password  db password
#
#   ** If you are installing or upgrading on db2 or udb you should do the following:
#          set the rules.schema.name to the schema name required
#                  update the udb.conf file in the /config directory if you have additional
#          connection properties that need to be set. (schema name will be automatically added)

#pega.jdbc.driver.jar=
#pega.jdbc.driver.class=oracle.jdbc.OracleDriver
#pega.database.type=oracledate
#pega.jdbc.url=jdbc:oracle:thin:@localhost:1521/orcl
#pega.jdbc.username=pega
#pega.jdbc.password=pega

pega.jdbc.driver.jar=/data/apache-tomcat-7.0.75/lib/ojdbc7.jar
pega.jdbc.driver.class=oracle.jdbc.OracleDriver
pega.database.type=oracledate
pega.jdbc.url=jdbc:oracle:thin:@ecase-rds.cjbf7fggtkr0.us-gov-west-1.rds.amazonaws.com:1521/orcl
pega.jdbc.username=pega_admin
pega.jdbc.password=prtHJK3o3ir

# For installs only.
#Set pega.platform.userids.issecure to true enable secured mode. Deploying the Pega 7 Platform in secured mode requires an administrator to enable new out of the box operators. The administrator and new out of the box operators must change their passwords when they first log in. This can help prevent unauthorized access to the system

# Set to false to disable secured mode. The system creates and enables all new operators, including the administrator, with default passwords. Unauthorized users might use the default passwords to gain administrator access to your system.
pega.platform.userids.issecure=false

#Uncomment this property and add a list of ; delimited connections properties
#For example jdbc.custom.connection.properties=user=usr;password=pwd
#jdbc.custom.connection.properties=

#Rules schema name : Used for all databases.
#The user name is used for default schema name
rules.schema.name=pega_rules

# Data schema name : Used for systems running on a Split Schema
# The value of rules.schema.name is the default value for data.schema.name
data.schema.name=pega_data

#User Temp Directory. Will use default if not set to valid directory
user.temp.dir=

#z/OS Site Specific Properties file
pega.zos.properties=

# Generate schema will be skipped if this property is set to true
# Note: Leave this property blank if you need to generate the schema
bypass.pega.schema

# Generate UDF will be skipped if this property is set to true
# Note: Leave this property blank if you need to generate the UDF
bypass.udf.generation=true

# Note: The utility will skip any DDL Generation if all three bypass properties above
#       are set to true.

# Truncate UpdatesCache will be skipped if this property is set to true
# Note: This property should be left blank so that the UpdatesCache table
#       may be truncated automatically by the installer. If your site
#       chooses to bypass this reset of the UpdateCache table, then the
#       site must do the truncate of the 'PR_SYS_UPDATESCACHE' in the Data
#       schema, manually after the install, upgrade or update before the
#       system is started up.
#bypass.truncate.updatescache


# Rebuild Database Rules Indexes after Rules Load to improve Database Access Performance
# It can be executed manually by running the stored procedure SPPR_REBUILD_INDEXES
# Default is false except for z/OS, where the default is true
rebuild.indexes

# The system name uniquely identifies a single Process Commander System.
# Since multiple PRPC Systems may reference the same database, it is important that each
# system has a unique name in order to distinguish them from each other.
# During installs, the following system name will be created.
system.name=pega

# During installs, the above system name is generated with the following production level.
# The system production level can be set to one of the below integer values (1-5):
# 5 = production;
# 4 = preproduction;
# 3 = test;
# 2 = development;
# 1 = experimental
production.level=2

# Is this a multitenant system?
# A multitenant system allows organizations to act as distinct PRPC installations
multitenant.system=false

# Run Update Existing Applications activity after upgrade?
# Default setting is false.
# For upgrades or updates: Upgrade Existing Applications is run if this setting is set to true.
# Update Existing Applications can be run from upgrade scripts, prpcUtils, or by directly launching in PRPC after upgrade.
update.existing.applications=false

# Run Update Applications Schema utility after upgrade?
# Update applications schema: Default setting is false.
# For upgrades or updates, set to true to run the Update Applications Schema utility to update the cloned Rule, Data, Work and Work history tables with the schema changes in the latest base tables.
# You can also run this utility later from prpcUtils, or by directly launching the utility in the Pega 7 Platform.
update.applications.schema=false


# Workload manager to load UDFs into db2zos
db2zos.udf.wlm

# Run RuleSet Cleanup
# Generate and execute a SQL script to clean old rulesets and their rules from the system
# If you would like to only generate the script, not execute it, see cleanup.bat or cleanup.sh script
run.ruleset.cleanup


#Schema file name to be used for reversal
#reversal.schema.file.name=

##### SETTINGS FOR RESUME #####
# If set to true, then system resumes the previous upgrade/update deployment by reusing the database configuration
# information from the previous deployment attempt and restarts the deployment from the step where the failure occurred.
#
# If set to false, then system restarts the deployment from the beginning and ignores the database configuration
# information from the previous deployment attempt.
automatic.resume=true
